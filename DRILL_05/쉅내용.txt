중간고사 1번문제

게임이란?

가상월드에 존재하는 여러 객체들의 상호작용

터치 조작 사운드이 상호작용을 물리적으로 작용


플랫폼

요즘 게임 엔지는 원소스 멀티 플레이어 를 이용해 하나의 코드로 여러가지 플랫폼에서
작동을 가능하게 할 수 있다

워킹 디렉토리

프로그램이 맨 처음 리소스를 찾는 공간. 즉 게임을 실행할때 필요한 리소스를 찾아오는 폴더를 말한다.


png vs jpg

사진과 같은 대용량 이미지는 jpg를 사용하는데 왜 게임 제작할때
왜 png를 더 많이 사용하는가 ??

jpg = 손실이 있는 압축포맷
원래 이미지를 다 보여주지않고 일부는 화질을 낮추더라도 압축을 많이 하기위한 작업을 한다.
사람의 시각 인지 능력의 부족함을 이용함.

굳이 사용한다면 게임 배경정도

png = 손실이 없음
투명 레이어를 지원

from library import *

특정 라이브러리를 사용할대 항상 그 라이브러리의 이름. 함수명 을 사용하는데 위를 사용하면
굳이 붙이지 안항도 그 라이브러리 함수이름을 사용한다

주의점/ 다른 라이브러리에 존재하는 함수와 동일한 이름을 가질경우 기존것을 덮어 쓰고 호출하기때문에
가능한 붙이는 것이 좋다
using namespace std와 비슷

피봇

이미지를 화면에 랜더링할때 위치에 기준이 되는 이미지상의 위치

이미지를 캔버스상에 어떤 점에 위치시킨다고 할때 그 이미지의 어떤 부분을 기준으로 위치시킬지 정해야한다.
즉 피벗을 정해놓아야 한다.
아트 기획자와 프로그래머가 사전에 정해야하는 부분이다.


파이썬의 주석은 #이다

게임 루프 : 모든게임에 존재하는 무한루프, 로직과 랜더링의 무한 반복
1. 그린다.      현재 게임내에 객체 상황을 그린다. -> 게임 랜더링
2.계산한다.    객체들의 상호작용을 계산한다. -> 게임 로직


화면 플리커링 - 화면이 깜박거리는 현상 -> 더블버퍼링을 통해 해결
->어디선가 다 그려놓고 한번에 전환시키는 작업을 해야함 (마치 연극장의 커튼과 같은 역활)

컴퓨터안에 있는 그래픽카드 안에 있는 비드 메모리(버퍼)라고 불리는게 있음
이 버퍼가 모니터에 케이블을 통해 화면으로 출력

더블버퍼링
버퍼를 2개를 두어 그림을 그리는 중에는 뒤에다 작업하고 그리는 것이 끝나면 앞에 버퍼의 이미지에 고속카피(복사)
-> 반복되는것을 사람눈이 캐치를 하지못함

더블버퍼링보다 좀더 빠르게 하고싶다??

페이퍼 플리핑
그림을 그린 후에 두 버퍼의 메모리 포인터를 바꿔치기한다 -> 복사할 필요가없음

이 작업을 update canvus 라는 명령어를 통해 가능하다!

애니메이션의 프레임을 늘릴 경우 좋은 움직임을 보일수있지만 그만큼 큰 용량의 이미지 씬이 필요 -> 과부하
애니메이션의 프레임이 적을 경우 성능은 높일 수 있지만 퀄리티는 적음 ->대충 그린것 처럼 보임

-> LOD : level of detail

게임의 퀄리티는 LOD에따라 결정됨 -> 개발자와 기획자가 객체의 중요성에 따라 적절하게 결정하여 최적화한다.
보통 화면은 60에서 120fps 를 사용하기 때문에 60fps 좋게는 120fps를 사용한다.


입력 이벤트를 폴링한다
get_events() = 여론조사

이렇게 넘겨받은 입력 이벤트는 
여러개의 이벤트가 담겨있는 리스트로 넘아간다

for를 이용해서 리스트에 있는 이벤트를 하나하나 꺼낸다.
이벤트의 종류를 구별: 키보드 이벤트인지 마우스 이벤트인지

어떤키가 눌렸는가를 확인 -> event.key (키보드) event.x event.y (마우스)


global = 특정 변수에 대해서 밖에서 선언된 변수를 다른 함수 내에서도 사용하기 위해 붙여야한다
일종의 전역변수 선언이라고 보면된다

