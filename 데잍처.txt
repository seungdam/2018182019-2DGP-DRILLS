졸업 작품 통과 받기

미리 미리 일찍 시작해라

게임 데이터 처리

직렬화
순차적으로 보낸다. 컴퓨터의 데이터를 외부에 보낼때 (하드디스크 ssd)
커다란 양의 데이터을 한꺼번에 저장하는 것은 힘들다. 따라서 데이터를 나눠서 순차적으로 차례차례 저장하는 행위가 필요.
 <-> 
비 직렬화
 다시 가져오는 행위

즉 save 와 load라고 할 수 있다.
사용처
1. 게임 플레이 상황을 저장하고 로드할때
2. 맵데이터의 출력 또는 입력
3. 게임내 객체들의 초기화 데이터 로딩

하드코딩
무식한방법 다른사람은 수정하기가 힘듬

소프트코딩
다른사람도 쉽게 수정할 수있도록 

파일 입출력
밖에 외부파일의 형태로 저장하고 읽어들인다.

파싱
텍스트 형태로 되어있는 문자열을 다른 데이터 형태로 바꿔주는것

하지만 파싱은 과정이 귀찮음...
->> 파이썬에서는 json 을 사용한다.
파싱을 효과적으로 처리
파이썬의 리스트와 딕셔너리와 방식이 거의 동일
또 다른 방법으로는 xml 이 있음.

json 
은 dump 와 로드 기능이있다.
dumps는  객체를 텍스트(스트링) 데이터로 변형
loads는 스트링을 객체 데이터로 변형

하지만 json은 다양한 객체들을 저장하는것에 한계가있음
-> 피클 을 사용한다

저장한다 => 피클
저장한것을 불러온다 => 역 피클

__dict__

객체에 미리 정의된 멤버 변수들이 딕셔너리 형태의 데이터로 저장되어있음
이것을 통해 객체의 속성을 쉽게 바꿀 수 있음.
__getstate__

내가 저장하고싶은 데이터를 결정
피클 모듈은 이 함수를 이용해 저장할 내용을 가져온다.
__setstate__

객체를 복구할때 복구할 내용을 가져온다
이후 업데이트를 통해 값을 채워준다.

pickle load로 객체를 만들경우 초기화가 자동으로 호출되지않음 
그래서 생성자를 강제로 호출해야함.

게임 save와 load 구현

